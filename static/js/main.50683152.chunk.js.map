{"version":3,"sources":["services/api.js","components/ModalComicDetails/index.tsx","services/sendEmail.js","components/ModalInsertEmail/index.tsx","Icons/Mask.js","components/ModalAlert/index.tsx","pages/ComicsList/index.tsx","routes.js","App.tsx","index.tsx"],"names":["api","axios","create","baseURL","Modal","comicDetails","closeModal","escFunction","event","keyCode","useEffect","document","addEventListener","image","className","src","alt","id","size","onClick","title","creators","items","map","creator","index","name","role","prices","price","type","toLocaleString","style","currency","email","data","a","emailjs","send","ModalInsertEmail","sendEmailData","useState","setName","setEmail","alertMessage","setAlertMessage","loading","setLoading","sendEmailContent","templateHTML","generateTemplateHTML","message","sendEmail","then","response","console","log","status","text","error","comic","thumbnail","path","extension","placeholder","onChange","e","target","value","color","SvgMask","props","data-name","xmlns","viewBox","d","ModalAlert","ComicsList","comics","setComics","lovedComics","setLovedComics","classShowButton","setClassShowButton","selectedComic","setSelectedComic","ts","Date","getTime","publicKey","privateKey","CryptoJS","MD5","toString","loadComics","get","results","ModalComicDetails","undefined","toUpperCase","onMouseOver","class","onMouseOut","Mask","width","height","icon","getElementById","card","find","com","filter","item","classList","remove","add","loveComic","showComicDetails","length","Routes","component","App","documentElement","getAttribute","setAttribute","htmlFor","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.50683152.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL:'https://gateway.marvel.com/v1/public'\r\n})\r\n\r\nexport default api;","import React, { useEffect, InputHTMLAttributes } from \"react\";\r\nimport IComic from '../../models/comics';\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport \"./styles.scss\";\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement>{\r\n  comicDetails?:IComic | undefined,\r\n  closeModal?:Function | any,\r\n}\r\n\r\n\r\nconst Modal : React.FC<InputProps> =  ({ comicDetails, closeModal }) => {\r\n  const escFunction = (event : any) => {\r\n    if (event.keyCode === 27) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escFunction, false);\r\n  }, []);\r\n\r\n  return (\r\n    <> \r\n      {comicDetails?.image && (\r\n        <div className=\"overlay\">\r\n          <div className=\"container-modal-details\">\r\n            <div className=\"image-detail\">\r\n              <img\r\n                src={comicDetails?.image}\r\n                alt=\"ilustrative image of choosen comic\"\r\n              />\r\n            </div>\r\n            <div className=\"details\">\r\n              <AiOutlineClose id=\"closeIcon\" size={20} onClick={closeModal} />\r\n              <h2>{comicDetails.title}</h2>\r\n              <h3>Criadores:</h3>\r\n              <p>\r\n                {comicDetails.creators &&\r\n                  comicDetails.creators.items.map(\r\n                    (creator, index) =>\r\n                      index < 15 && (\r\n                        <span key={creator.name}>\r\n                          {creator.name} - {creator.role}\r\n                        </span>\r\n                      )\r\n                  )}\r\n              </p>\r\n              <h3> Custos:</h3>\r\n              <p>\r\n                {comicDetails?.prices &&\r\n                  comicDetails?.prices?.map(\r\n                    (price, index) =>\r\n                      index < 10 && (\r\n                        <span key={index}>\r\n                          {price.type === \"printPrice\"\r\n                            ? \"Preço de impressão\"\r\n                            : price.type === \"digitalPrice\"\r\n                            ? \"Preço de digitalização\"\r\n                            : price.type}{\" \"}\r\n                          -{\" \"}\r\n                          {price?.price?.toLocaleString(\"en-us\", {\r\n                            style: \"currency\",\r\n                            currency: \"USD\",\r\n                          })}\r\n                        </span>\r\n                      )\r\n                  )}\r\n              </p>\r\n              <button id=\"closeButton\" onClick={closeModal}>\r\n                FECHAR\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import emailjs from \"emailjs-com\";\r\n\r\nconst email = async (data) => {\r\n  return emailjs.send(\"gmail\", \"teste_gustavo\", data, \"user_WPXJoZkANDAMzZI3y3lvX\")\r\n    \r\n};\r\n\r\nexport default email;\r\n","import React, { useState, useEffect , InputHTMLAttributes} from \"react\";\r\nimport IComic from '../../models/comics';\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport sendEmail from \"../../services/sendEmail\";\r\nimport \"./styles.scss\";\r\nimport { FaSpinner } from \"react-icons/fa\";\r\n\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement>{\r\n  sendEmailData?:IComic[],\r\n  closeModal?:Function | any\r\n}\r\n\r\nconst ModalInsertEmail : React.FC<InputProps> = ({ sendEmailData, closeModal })  => {\r\n  \r\n  const [name, setName] = useState<string>(\"\");\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [alertMessage, setAlertMessage] = useState<string>(\"\");\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const sendEmailContent = async () => {\r\n    setLoading(true);\r\n\r\n    const templateHTML = generateTemplateHTML();\r\n\r\n    const data = {\r\n      name,\r\n      email,\r\n      message: templateHTML,\r\n    };\r\n\r\n    await sendEmail(data).then(\r\n      (response) => {\r\n        console.log(response);\r\n        if (response.status == 200 || response.text == \"OK\")\r\n          setAlertMessage(\"E-mail enviado com sucesso.\");\r\n        else\r\n          setAlertMessage(\r\n            \"Ocorreu um erro, verifique o e-mail digitado e tente novamente mais tarde.\"\r\n          );\r\n        setLoading(false);\r\n      },\r\n      (error) => {\r\n        setAlertMessage(\r\n          \"Ocorreu um erro, verifique o e-mail digitado e tente novamente mais tarde.\"\r\n        );\r\n        setLoading(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  const generateTemplateHTML = () => {\r\n    return sendEmailData?.map(\r\n      (comic:IComic) =>\r\n        `<div>\r\n        <img style=\"height:300px\" src=${comic?.thumbnail?.path}.${\r\n          comic?.thumbnail?.extension\r\n        }>\r\n      \r\n    </div>\r\n    <div>\r\n      <span>${comic.title}</span>\r\n      ${\r\n        comic.creators &&\r\n        comic.creators.items.map(\r\n          (creator) =>\r\n            `<p>\r\n            <span>${creator.name}</span>\r\n            <span>${creator.role}</span>\r\n          </p>`\r\n        )\r\n      }\r\n    </div>\r\n  `\r\n    );\r\n  };\r\n\r\n  const escFunction = (event : any) => {\r\n    if (event.keyCode === 27) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escFunction, false);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"overlay\">\r\n      <div className=\"container-modal\">\r\n        <AiOutlineClose size={20} onClick={closeModal} />\r\n        <h2> Por favor, digite os campos abaixo: </h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nome\"\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n          }}\r\n        />\r\n        <button onClick={sendEmailContent}>\r\n          {loading ? (\r\n            <FaSpinner id=\"spinner\" color=\"#FFF\" size={18} />\r\n          ) : (\r\n            \"ENVIAR E-MAIL\"\r\n          )}\r\n        </button>\r\n        {alertMessage && <span id=\"alert\">{alertMessage}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalInsertEmail;\r\n","import * as React from \"react\";\n\nfunction SvgMask(props) {\n  return (\n    <svg\n      data-name=\"Camada 1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 374 335\"\n      {...props}\n    >\n      <path d=\"M227.77 144.94c-17.85 4.91-27.52 22.65-27.56 22.77h-.1s18.5 10.08 35.33 5.45S263 150.54 263 150.42h.11s-17.48-10.42-35.34-5.48zM146.11 144.94c-17.85-4.92-35.33 5.45-35.33 5.45h.1c0 .12 10.74 18.14 27.56 22.77s35.34-5.45 35.34-5.45h-.11c-.04-.12-9.67-17.86-27.56-22.77z\" />\n      <path d=\"M365.41 82.81c-8.86-34.38-28.74-59.73-63-71C266-.22 233.62 8.26 207 36c-7.55 7.88-13.58 17.22-20.46 26.09-1-1.56-2.27-3.7-3.61-5.83-9.06-14.41-20.13-26.91-34.66-36-22.83-14.32-47.38-16.94-73-9.69-24 6.79-42.61 21.32-54.66 43C-1.11 92.61.05 132.05 21.69 170.89c12.89 23.13 30.7 42.41 50.17 60 31.41 28.28 63.53 55.77 95.35 83.58 4 3.51 8 7 12.13 10.41 4.88 4.06 10.5 4.31 15.2.21 39.59-34.57 80.8-67.32 118.25-104.3 15.45-15.25 29.58-31.66 40.27-50.74 8.49-15.14 14-31.23 15.4-48.63.08-1 .36-2.06.54-3.09v-14.97c-1.17-6.86-1.86-13.84-3.59-20.55zM186.94 222.73S39.34 207.21 82.87 91.93c0 0 2.46 2.5 7 6.39a166.41 166.41 0 017.36-23.52s47.77 54.29 89.71 54.29 89.71-54.29 89.71-54.29A166.52 166.52 0 01284 98.32c4.54-3.89 7-6.39 7-6.39 43.54 115.28-104.06 130.8-104.06 130.8z\" />\n    </svg>\n  );\n}\n\nexport default SvgMask;\n","import React,{InputHTMLAttributes} from \"react\";\r\nimport \"../ModalInsertEmail/styles.scss\";\r\n\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement>{\r\n  message?:string,\r\n  closeModal?:Function | any,\r\n}\r\n\r\n\r\nconst ModalAlert : React.FC<InputProps> = ({ message, closeModal }) =>{\r\n  return (\r\n    <div className=\"overlay\">\r\n      <div className=\"container-modal\">\r\n        <p>{message}</p>\r\n        <button onClick={closeModal}>OK</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalAlert;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport api from \"../../services/api\";\r\nimport CryptoJS from \"crypto-js\";\r\nimport ModalComicDetails from \"../../components/ModalComicDetails\";\r\nimport { FaSpinner } from \"react-icons/fa\";\r\nimport { HiOutlineMail } from \"react-icons/hi\";\r\nimport ModalInsertEmail from \"../../components/ModalInsertEmail\";\r\nimport Mask from \"../../Icons/Mask\";\r\nimport \"./styles.scss\";\r\nimport ModalAlert from \"../../components/ModalAlert\";\r\nimport IComic from \"../../models/comics\";\r\n\r\n\r\ninterface IShowObject {\r\n  class?:string,\r\n  index?:number\r\n}\r\n\r\n\r\nconst  ComicsList: React.FC = () => {\r\n  const [comics, setComics] = useState<IComic[]>([]);\r\n  const [lovedComics, setLovedComics] = useState<IComic[]>([]);\r\n  const [classShowButton, setClassShowButton] = useState<IShowObject | undefined>();\r\n  const [selectedComic, setSelectedComic] = useState<IComic | undefined>();\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [alertMessage, setAlertMessage] = useState<string>(\"\");\r\n\r\n  const ts = new Date().getTime();\r\n  const publicKey = \"a9c872e621bea639063b886de6f2a77a\";\r\n  const privateKey = CryptoJS.MD5(\r\n    ts + \"4f7fa7d20c0f3a139e6da96d2098a87a8e26647f\" + publicKey\r\n  ).toString();\r\n  const [email, setEmail] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    loadComics();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(lovedComics);\r\n  }, [lovedComics]);\r\n\r\n  const loadComics = async () => {\r\n    setLoading(true);\r\n    await api\r\n      .get(\r\n        `/comics?limit=${99}&offset=${100}&ts=${ts}&apikey=${publicKey}&hash=${privateKey}`\r\n      )\r\n      .then(\r\n        (response) => {\r\n          if (response.data && response.data.data)\r\n            setComics(response.data.data.results);\r\n          else\r\n            setAlertMessage(\r\n              \"Ocorreu um erro com o serviço, por favor tente novamente mais tarde.\"\r\n            );\r\n        },\r\n        (error) => {\r\n          setAlertMessage(\r\n            \"Ocorreu um erro com o serviço, por favor tente novamente mais tarde.\"\r\n          );\r\n        }\r\n      );\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const showComicDetails = (comic: IComic) => {\r\n    comic.image = `${comic?.thumbnail?.path}.${comic?.thumbnail?.extension}`;\r\n    setSelectedComic(comic);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setSelectedComic(undefined);\r\n  };\r\n\r\n  const closeModalEmail = () => {\r\n    setEmail(false);\r\n  };\r\n\r\n  const closeModalAlert = () => {\r\n    setAlertMessage('');\r\n  };\r\n\r\n  const loveComic = (comic: IComic) => {\r\n    const icon = document.getElementById(\"icon-love\" + comic.id);\r\n    const card = document.getElementById(\"card\" + comic.id);\r\n    const comicIsLoved = lovedComics.find((com) => comic.id === com.id);\r\n\r\n    if (!comicIsLoved) {\r\n      setLovedComics([...lovedComics, comic]);\r\n      icon?.classList.add(\"selected\");\r\n      card?.classList.add(\"selected\");\r\n    } else {\r\n      setLovedComics(lovedComics.filter((item) => item.id !== comic.id));\r\n      icon?.classList.remove(\"selected\");\r\n      card?.classList.remove(\"selected\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-list\">\r\n      <ModalComicDetails comicDetails={selectedComic} closeModal={closeModal} />\r\n      {email && (\r\n        <ModalInsertEmail\r\n          sendEmailData={lovedComics}\r\n          closeModal={closeModalEmail}\r\n        />\r\n      )}\r\n      {alertMessage && (\r\n        <ModalAlert message={alertMessage} closeModal={closeModalAlert} />\r\n      )}\r\n      <h1>FAVORITE SUAS HQS</h1>\r\n\r\n      <p>\r\n        {\"Clique no coração dentro da imagem para salvar suas HQs favoritas. Em seguida adicione seu e-mail no ícone abaixo para recebê-las.\".toUpperCase()}{\" \"}\r\n      </p>\r\n      {loading ? (\r\n        <FaSpinner id=\"spinner\" color=\"#FFF\" size={100} />\r\n      ) : (\r\n        <>\r\n          <div className=\"container-cards\">\r\n            {comics &&\r\n              comics.map((comic:IComic, index:number) => (\r\n                <div\r\n                  id={`card${comic.id}`}\r\n                  className=\"card\"\r\n                  key={comic.id}\r\n                  onMouseOver={() => {\r\n                    setClassShowButton({ class: \"mouseOver\", index });\r\n                  }}\r\n                  onMouseOut={() => {\r\n                    setClassShowButton({});\r\n                  }}\r\n                >\r\n                  <div\r\n                    id={`overlay-container-options-card` + comic.id}\r\n                    className={\r\n                      classShowButton?.class && index === classShowButton?.index\r\n                        ? classShowButton?.class\r\n                        : \"hide\"\r\n                    }\r\n                  >\r\n                    <Mask\r\n                      id={`icon-love${comic.id}`}\r\n                      className=\"icon-love\"\r\n                      width=\"70px\"\r\n                      height=\"70px\"\r\n                      onClick={() => loveComic(comic)}\r\n                    />\r\n\r\n                    <button\r\n                      id={`button-see-more${comic.id}`}\r\n                      onClick={() => showComicDetails(comic)}\r\n                    >\r\n                      VER MAIS\r\n                    </button>\r\n                  </div>\r\n                  <span>{comic.title}</span>\r\n                  <img\r\n                    src={`${comic?.thumbnail?.path}.${comic?.thumbnail?.extension}`}\r\n                    alt=\"ilustrative image of comic\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n          <div className=\"button\">\r\n            <button\r\n              onClick={() => {\r\n                if (lovedComics.length > 0) setEmail(true);\r\n                else\r\n                  setAlertMessage(\r\n                    \"Por favor, marque suas HQs preferidas antes.\"\r\n                  );\r\n              }}\r\n            >\r\n              <HiOutlineMail size={30} />\r\n              Enviar preferidos por e-mail\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComicsList;\r\n","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport ComicsList from './pages/ComicsList';\r\n\r\nexport default function Routes() {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" component={ComicsList} />\r\n      </Switch>\r\n    );\r\n  }","import React from \"react\";\nimport Routes from \"./routes\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  const changeMode = () => {\n    const theme = document.documentElement.getAttribute(\"data-theme\");\n    if(theme==='dark') document.documentElement.setAttribute(\"data-theme\", \"light\");\n    else document.documentElement.setAttribute(\"data-theme\", \"dark\");\n  };\n\n  return (\n    <BrowserRouter>\n      <div id=\"switch\">\n        <span>Dark | Light mode</span>\n        <input id=\"toggle\"type=\"checkbox\" name=\"theme\" onChange={changeMode} />\n        <label htmlFor=\"toggle\">Toggle</label>\n      </div>\n      <Routes />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
{"version":3,"sources":["pages/ComicsList/index.tsx","services/api.js","components/ModalComicDetails/index.tsx","Icons/Mask.js","components/ModalAlert/index.tsx","services/sendEmail.js","components/ModalInsertEmail/index.tsx","routes.js","App.tsx","index.tsx"],"names":["ComicsList","useState","comics","setComics","lovedComics","setLovedComics","classShowButton","setClassShowButton","selectedComic","setSelectedComic","loading","setLoading","alertMessage","setAlertMessage","ts","Date","getTime","publicKey","process","privateKey","REACT_APP_PRIVATE_KEY","CryptoJS","MD5","toString","email","setEmail","useEffect","loadComics","console","log","a","api","get","then","response","data","results","error","className","comicDetails","closeModal","undefined","sendEmailData","message","toUpperCase","id","color","size","map","comic","index","onMouseOver","class","onMouseOut","width","height","onClick","icon","document","getElementById","card","find","com","filter","item","classList","remove","add","loveComic","image","thumbnail","path","extension","showComicDetails","title","src","alt","length","axios","create","baseURL","Modal","escFunction","event","keyCode","addEventListener","creators","items","creator","name","role","prices","price","type","toLocaleString","style","currency","SvgMask","props","data-name","xmlns","viewBox","d","ModalAlert","emailjs","send","ModalInsertEmail","setName","sendEmailContent","templateHTML","generateTemplateHTML","sendEmail","status","text","placeholder","onChange","e","target","value","Routes","component","App","documentElement","getAttribute","setAttribute","htmlFor","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6ed3eb2a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport api from \"../../services/api\";\r\nimport CryptoJS from \"crypto-js\";\r\nimport ModalComicDetails from \"../../components/ModalComicDetails\";\r\nimport { FaSpinner } from \"react-icons/fa\";\r\nimport { HiOutlineMail } from \"react-icons/hi\";\r\nimport ModalInsertEmail from \"../../components/ModalInsertEmail\";\r\nimport Mask from \"../../Icons/Mask\";\r\nimport \"./styles.scss\";\r\nimport ModalAlert from \"../../components/ModalAlert\";\r\nimport IComic from \"../../models/comics\";\r\n\r\n\r\ninterface IShowObject {\r\n  class?:string,\r\n  index?:number\r\n}\r\n\r\n\r\nconst  ComicsList: React.FC = () => {\r\n  const [comics, setComics] = useState<IComic[]>([]);\r\n  const [lovedComics, setLovedComics] = useState<IComic[]>([]);\r\n  const [classShowButton, setClassShowButton] = useState<IShowObject | undefined>();\r\n  const [selectedComic, setSelectedComic] = useState<IComic | undefined>();\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [alertMessage, setAlertMessage] = useState<string>(\"\");\r\n\r\n  const ts = new Date().getTime();\r\n  const publicKey = process.env.REACT_APP_PUBLIC_KEY;\r\n  let privateKey = '';\r\n  \r\n  if (process?.env?.REACT_APP_PRIVATE_KEY){\r\n    privateKey = CryptoJS.MD5(\r\n      ts + process?.env?.REACT_APP_PRIVATE_KEY + publicKey\r\n    ).toString();\r\n  }\r\n  const [email, setEmail] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    loadComics();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(lovedComics);\r\n  }, [lovedComics]);\r\n\r\n  const loadComics = async () => {\r\n    setLoading(true);\r\n    await api\r\n      .get(\r\n        `/comics?limit=${99}&offset=${100}&ts=${ts}&apikey=${publicKey}&hash=${privateKey}`\r\n      )\r\n      .then(\r\n        (response) => {\r\n          if (response.data && response.data.data)\r\n            setComics(response.data.data.results);\r\n          else\r\n            setAlertMessage(\r\n              \"Ocorreu um erro com o serviço, por favor tente novamente mais tarde.\"\r\n            );\r\n        },\r\n        (error) => {\r\n          setAlertMessage(\r\n            \"Ocorreu um erro com o serviço, por favor tente novamente mais tarde.\"\r\n          );\r\n        }\r\n      );\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const showComicDetails = (comic: IComic) => {\r\n    comic.image = `${comic?.thumbnail?.path}.${comic?.thumbnail?.extension}`;\r\n    setSelectedComic(comic);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setSelectedComic(undefined);\r\n  };\r\n\r\n  const closeModalEmail = () => {\r\n    setEmail(false);\r\n  };\r\n\r\n  const closeModalAlert = () => {\r\n    setAlertMessage('');\r\n  };\r\n\r\n  const loveComic = (comic: IComic) => {\r\n    const icon = document.getElementById(\"icon-love\" + comic.id);\r\n    const card = document.getElementById(\"card\" + comic.id);\r\n    const comicIsLoved = lovedComics.find((com) => comic.id === com.id);\r\n\r\n    if (!comicIsLoved) {\r\n      setLovedComics([...lovedComics, comic]);\r\n      icon?.classList.add(\"selected\");\r\n      card?.classList.add(\"selected\");\r\n    } else {\r\n      setLovedComics(lovedComics.filter((item) => item.id !== comic.id));\r\n      icon?.classList.remove(\"selected\");\r\n      card?.classList.remove(\"selected\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-list\">\r\n      <ModalComicDetails comicDetails={selectedComic} closeModal={closeModal} />\r\n      {email && (\r\n        <ModalInsertEmail\r\n          sendEmailData={lovedComics}\r\n          closeModal={closeModalEmail}\r\n        />\r\n      )}\r\n      {alertMessage && (\r\n        <ModalAlert message={alertMessage} closeModal={closeModalAlert} />\r\n      )}\r\n      <h1>FAVORITE SUAS HQS</h1>\r\n\r\n      <p>\r\n        {\"Clique no coração dentro da imagem para salvar suas HQs favoritas. Em seguida adicione seu e-mail no ícone abaixo para recebê-las.\".toUpperCase()}{\" \"}\r\n      </p>\r\n      {loading ? (\r\n        <FaSpinner id=\"spinner\" color=\"#FFF\" size={100} />\r\n      ) : (\r\n        <>\r\n          <div className=\"container-cards\">\r\n            {comics &&\r\n              comics.map((comic:IComic, index:number) => (\r\n                <div\r\n                  id={`card${comic.id}`}\r\n                  className=\"card\"\r\n                  key={comic.id}\r\n                  onMouseOver={() => {\r\n                    setClassShowButton({ class: \"mouseOver\", index });\r\n                  }}\r\n                  onMouseOut={() => {\r\n                    setClassShowButton({});\r\n                  }}\r\n                >\r\n                  <div\r\n                    id={`overlay-container-options-card` + comic.id}\r\n                    className={\r\n                      classShowButton?.class && index === classShowButton?.index\r\n                        ? classShowButton?.class\r\n                        : \"hide\"\r\n                    }\r\n                  >\r\n                    <Mask\r\n                      id={`icon-love${comic.id}`}\r\n                      className=\"icon-love\"\r\n                      width=\"70px\"\r\n                      height=\"70px\"\r\n                      onClick={() => loveComic(comic)}\r\n                    />\r\n\r\n                    <button\r\n                      id={`button-see-more${comic.id}`}\r\n                      onClick={() => showComicDetails(comic)}\r\n                    >\r\n                      VER MAIS\r\n                    </button>\r\n                  </div>\r\n                  <span>{comic.title}</span>\r\n                  <img\r\n                    src={`${comic?.thumbnail?.path}.${comic?.thumbnail?.extension}`}\r\n                    alt=\"ilustrative image of comic\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n          <div className=\"button\">\r\n            <button\r\n              onClick={() => {\r\n                if (lovedComics.length > 0) setEmail(true);\r\n                else\r\n                  setAlertMessage(\r\n                    \"Por favor, marque suas HQs preferidas antes.\"\r\n                  );\r\n              }}\r\n            >\r\n              <HiOutlineMail size={30} />\r\n              Enviar preferidos por e-mail\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComicsList;\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL:process.env.REACT_APP_API_URL,\r\n})\r\n\r\nexport default api;","import React, { useEffect, InputHTMLAttributes } from \"react\";\r\nimport IComic from '../../models/comics';\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport \"./styles.scss\";\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement>{\r\n  comicDetails?:IComic | undefined,\r\n  closeModal?:Function | any,\r\n}\r\n\r\n\r\nconst Modal : React.FC<InputProps> =  ({ comicDetails, closeModal }) => {\r\n  const escFunction = (event : any) => {\r\n    if (event.keyCode === 27) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escFunction, false);\r\n  }, []);\r\n\r\n  return (\r\n    <> \r\n      {comicDetails?.image && (\r\n        <div className=\"overlay\">\r\n          <div className=\"container-modal-details\">\r\n            <div className=\"image-detail\">\r\n              <img\r\n                src={comicDetails?.image}\r\n                alt=\"ilustrative image of choosen comic\"\r\n              />\r\n            </div>\r\n            <div className=\"details\">\r\n              <AiOutlineClose id=\"closeIcon\" size={20} onClick={closeModal} />\r\n              <h2>{comicDetails.title}</h2>\r\n              <h3>Criadores:</h3>\r\n              <p>\r\n                {comicDetails.creators &&\r\n                  comicDetails.creators.items.map(\r\n                    (creator, index) =>\r\n                      index < 15 && (\r\n                        <span key={creator.name}>\r\n                          {creator.name} - {creator.role}\r\n                        </span>\r\n                      )\r\n                  )}\r\n              </p>\r\n              <h3> Custos:</h3>\r\n              <p>\r\n                {comicDetails?.prices &&\r\n                  comicDetails?.prices?.map(\r\n                    (price, index) =>\r\n                      index < 10 && (\r\n                        <span key={index}>\r\n                          {price.type === \"printPrice\"\r\n                            ? \"Preço de impressão\"\r\n                            : price.type === \"digitalPrice\"\r\n                            ? \"Preço de digitalização\"\r\n                            : price.type}{\" \"}\r\n                          -{\" \"}\r\n                          {price?.price?.toLocaleString(\"en-us\", {\r\n                            style: \"currency\",\r\n                            currency: \"USD\",\r\n                          })}\r\n                        </span>\r\n                      )\r\n                  )}\r\n              </p>\r\n              <button id=\"closeButton\" onClick={closeModal}>\r\n                FECHAR\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import * as React from \"react\";\n\nfunction SvgMask(props) {\n  return (\n    <svg\n      data-name=\"Camada 1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 374 335\"\n      {...props}\n    >\n      <path d=\"M227.77 144.94c-17.85 4.91-27.52 22.65-27.56 22.77h-.1s18.5 10.08 35.33 5.45S263 150.54 263 150.42h.11s-17.48-10.42-35.34-5.48zM146.11 144.94c-17.85-4.92-35.33 5.45-35.33 5.45h.1c0 .12 10.74 18.14 27.56 22.77s35.34-5.45 35.34-5.45h-.11c-.04-.12-9.67-17.86-27.56-22.77z\" />\n      <path d=\"M365.41 82.81c-8.86-34.38-28.74-59.73-63-71C266-.22 233.62 8.26 207 36c-7.55 7.88-13.58 17.22-20.46 26.09-1-1.56-2.27-3.7-3.61-5.83-9.06-14.41-20.13-26.91-34.66-36-22.83-14.32-47.38-16.94-73-9.69-24 6.79-42.61 21.32-54.66 43C-1.11 92.61.05 132.05 21.69 170.89c12.89 23.13 30.7 42.41 50.17 60 31.41 28.28 63.53 55.77 95.35 83.58 4 3.51 8 7 12.13 10.41 4.88 4.06 10.5 4.31 15.2.21 39.59-34.57 80.8-67.32 118.25-104.3 15.45-15.25 29.58-31.66 40.27-50.74 8.49-15.14 14-31.23 15.4-48.63.08-1 .36-2.06.54-3.09v-14.97c-1.17-6.86-1.86-13.84-3.59-20.55zM186.94 222.73S39.34 207.21 82.87 91.93c0 0 2.46 2.5 7 6.39a166.41 166.41 0 017.36-23.52s47.77 54.29 89.71 54.29 89.71-54.29 89.71-54.29A166.52 166.52 0 01284 98.32c4.54-3.89 7-6.39 7-6.39 43.54 115.28-104.06 130.8-104.06 130.8z\" />\n    </svg>\n  );\n}\n\nexport default SvgMask;\n","import React,{InputHTMLAttributes} from \"react\";\r\nimport \"../ModalInsertEmail/styles.scss\";\r\n\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement>{\r\n  message?:string,\r\n  closeModal?:Function | any,\r\n}\r\n\r\n\r\nconst ModalAlert : React.FC<InputProps> = ({ message, closeModal }) =>{\r\n  return (\r\n    <div className=\"overlay\">\r\n      <div className=\"container-modal\">\r\n        <h2>{message}</h2>\r\n        <button onClick={closeModal}>OK</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalAlert;\r\n","import emailjs from \"emailjs-com\";\r\n\r\nconst email = async (data) => {\r\n  return emailjs.send(process.env.REACT_APP_SERVICE_EMAIL, process.env.REACT_APP_TEMPLATE_ID, data, process.env.REACT_APP_USER_EMAIL_ID)\r\n    \r\n};\r\n\r\nexport default email;\r\n","import React, { useState, useEffect , InputHTMLAttributes} from \"react\";\r\nimport IComic from '../../models/comics';\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport sendEmail from \"../../services/sendEmail\";\r\nimport \"./styles.scss\";\r\nimport { FaSpinner } from \"react-icons/fa\";\r\n\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement>{\r\n  sendEmailData?:IComic[],\r\n  closeModal?:Function | any\r\n}\r\n\r\nconst ModalInsertEmail : React.FC<InputProps> = ({ sendEmailData, closeModal })  => {\r\n  \r\n  const [name, setName] = useState<string>(\"\");\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [alertMessage, setAlertMessage] = useState<string>(\"\");\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const sendEmailContent = async () => {\r\n    setLoading(true);\r\n\r\n    const templateHTML = generateTemplateHTML();\r\n\r\n    const data = {\r\n      name,\r\n      email,\r\n      message: templateHTML,\r\n    };\r\n\r\n    await sendEmail(data).then(\r\n      (response) => {\r\n        console.log(response);\r\n        if (response.status == 200 || response.text == \"OK\")\r\n          setAlertMessage(\"E-mail enviado com sucesso.\");\r\n        else\r\n          setAlertMessage(\r\n            \"Ocorreu um erro, verifique o e-mail digitado e tente novamente mais tarde.\"\r\n          );\r\n        setLoading(false);\r\n      },\r\n      (error) => {\r\n        setAlertMessage(\r\n          \"Ocorreu um erro, verifique o e-mail digitado e tente novamente mais tarde.\"\r\n        );\r\n        setLoading(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  const generateTemplateHTML = () => {\r\n    return sendEmailData?.map(\r\n      (comic:IComic) =>\r\n        `<div>\r\n        <img style=\"height:300px\" src=${comic?.thumbnail?.path}.${\r\n          comic?.thumbnail?.extension\r\n        }>\r\n      \r\n    </div>\r\n    <div>\r\n      <span>${comic.title}</span>\r\n      <br>\r\n      ${\r\n        comic.creators &&\r\n        comic.creators.items.map(\r\n          (creator) =>\r\n            `<span>${creator.name}</span> - <span>${creator.role}</span>`\r\n        )\r\n      }\r\n    </div>\r\n  `\r\n    );\r\n  };\r\n\r\n  const escFunction = (event : any) => {\r\n    if (event.keyCode === 27) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escFunction, false);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"overlay\">\r\n      <div className=\"container-modal\">\r\n        <AiOutlineClose size={20} onClick={closeModal} />\r\n        <h2> Por favor, digite os campos abaixo: </h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nome\"\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n          }}\r\n        />\r\n        <button onClick={sendEmailContent}>\r\n          {loading ? (\r\n            <FaSpinner id=\"spinner\" color=\"#FFF\" size={18} />\r\n          ) : (\r\n            \"ENVIAR E-MAIL\"\r\n          )}\r\n        </button>\r\n        {alertMessage && <span id=\"alert\">{alertMessage}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalInsertEmail;\r\n","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport ComicsList from './pages/ComicsList';\r\n\r\nexport default function Routes() {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" component={ComicsList} />\r\n      </Switch>\r\n    );\r\n  }","import React from \"react\";\nimport Routes from \"./routes\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  const changeMode = () => {\n    const theme = document.documentElement.getAttribute(\"data-theme\");\n    if(theme==='dark') document.documentElement.setAttribute(\"data-theme\", \"light\");\n    else document.documentElement.setAttribute(\"data-theme\", \"dark\");\n  };\n\n  return (\n    <BrowserRouter>\n      <div id=\"switch\">\n        <span>Dark | Light mode</span>\n        <input id=\"toggle\"type=\"checkbox\" name=\"theme\" onChange={changeMode} />\n        <label htmlFor=\"toggle\">Toggle</label>\n      </div>\n      <Routes />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}